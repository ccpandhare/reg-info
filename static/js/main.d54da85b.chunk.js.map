{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["LoadJSON","setData","setReg","fileInput","useRef","useState","file","setFile","error","setError","useEffect","detectU","e","key","current","click","document","addEventListener","_","removeEventListener","validateFile","name","match","id","onClick","type","ref","onChange","_file","files","text","then","data","json","JSON","parse","Object","keys","catch","err","String","className","BitInfo","bit","selBit","property","setSelBit","isSelected","index","App","_data","regList","reg","regData","bits","handleKeyDown","useCallback","pressedKey","currentIndex","nextIndex","length","getNextBit","currentRegIndex","getNextReg","indexOf","currentData","obj","copy","stringify","value","currentValue","getNextValue","onkeydown","map","k","style","b","info","join","split","l","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d54da85b.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport _data from \"./data\";\n\nfunction App() {\n  const [data, setData] = useState(_data);\n  const regList = Object.keys(data);\n  const [reg, setReg] = useState(regList[0]);\n  const [selBit, setSelBit] = useState(null);\n\n  useEffect(() => {\n    if(selBit)\n      setSelBit(regData.bits[selBit.index]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  useEffect(() => {\n    setSelBit(null);\n  }, [reg])\n\n  const regData = data[reg];\n\n  const handleKeyDown = useCallback((e) => {\n      switch (e.key) {\n        case \"l\":\n        case \"h\":\n        case \"o\":\n          setSelBit(getNextBit(regData.bits, e.key, selBit && selBit.index));\n          break;\n        case \"j\":\n        case \"k\":\n          setReg(getNextReg(regList, e.key, regList.indexOf(reg)))\n          break;\n        case \" \":\n          if (!selBit) return;\n          setData((currentData) => {\n            const copy = deepCopyObject(currentData);\n            copy[reg].bits[selBit.index].value = getNextValue(selBit.value);\n            return copy;\n          });\n          break;\n        default:\n      }\n    },\n    [setReg, setSelBit, setData, regData, regList, selBit, reg]\n  );\n\n  document.onkeydown = handleKeyDown;\n\n  return regData ? (\n    <div className=\"App\">\n      <div id=\"Header\">\n        $ RegInfo\n        <LoadJSON setData={setData} setReg={setReg} />\n      </div>\n      <div id=\"Content\">\n        <div id=\"LeftSection\">\n          {regList.map((k) => (\n            <p\n              className={`regLink ${k === reg && \"selected\"}`}\n              onClick={(_) => setReg(k)}\n            >\n              {k}\n            </p>\n          ))}\n        </div>\n        <div id=\"RegSection\">\n          <p id=\"RegName\" onClick={_ => setSelBit(null)}>{regData.name || \"No Name\"}</p>\n          <div id=\"Bits\" style={{'--cols': regData.bits.length}}>\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"index\" setSelBit={setSelBit} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo selBit={selBit} bit={b} property=\"value\" setSelBit={setSelBit} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"name\" setSelBit={setSelBit} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"permissions\" setSelBit={setSelBit} />\n              ))}\n          </div>\n          <div id=\"Info\">\n            <div>\n              {\n                getLines(selBit ? (selBit.info[selBit.value] || selBit.info.join('\\n')) : regData.info).map(l => <p>{l}</p>)\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : <div>Loading...</div>;\n}\n\nfunction LoadJSON({setData, setReg}) {\n  const fileInput = useRef();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileInputChange = _ => {\n    setFile(null);\n    setError(null);\n    const _file = fileInput.current.files[0];\n    const isValid = validateFile(_file);\n    if(isValid) {\n      setFile(_file);\n      _file.text().then(data => {\n        const json = JSON.parse(data);\n        setData(json);\n        setReg(Object.keys(json)[0])\n      }).catch(err => setError(String(err)));\n    } else {\n      setError(\"Invalid File\");\n    }\n  }\n  useEffect(() => {\n    const detectU = e => {\n      if(e.key === 'u') {\n        fileInput.current.click();\n      }\n    }\n    document.addEventListener(\"keyup\", detectU);\n    return _ => {\n      document.removeEventListener(\"keyup\", detectU);\n    }\n  })\n  const validateFile = file => {\n    return !!file.name.match(/.json$/i);\n  }\n  return (\n    <div id=\"LoadJSON\">\n      <button onClick={_ => fileInput.current.click()}>$ Load JSON</button>\n      <input type=\"file\" ref={fileInput} onChange={handleFileInputChange} />\n      {error ? <label className=\"error\">{error}</label> : file && <label>{file.name}</label>}\n    </div>\n  );\n}\n\nfunction BitInfo({bit, selBit, property, setSelBit}) {\n  const isSelected = selBit ? selBit.index === bit.index : false;\n  return (\n    <label\n      className={`bitInfo ${property} ${isSelected && 'selected'}`}\n      onClick={_ => setSelBit(bit)}>\n      {bit[property]}\n    </label>\n  )\n}\n\nfunction getNextValue(currentValue) {\n  switch (currentValue) {\n    case 'x':\n      return '0';\n    case '0':\n      return '1';\n    case '1':\n    default:\n      return 'x';\n  }\n}\n\nfunction deepCopyObject(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction getLines(text) {\n  return text.split(\"\\n\");\n}\n\nfunction getNextBit(bits, pressedKey, currentIndex) {\n  let nextIndex;\n  switch (pressedKey) {\n    case 'l':\n      if (currentIndex == null) currentIndex = -1;\n      nextIndex = currentIndex + 1 < bits.length ? currentIndex + 1 : 0;\n      return bits[nextIndex];\n    case 'h':\n      if (currentIndex == null) currentIndex = 0;\n      nextIndex = currentIndex === 0 ? bits.length - 1 : currentIndex - 1;\n      return bits[nextIndex];\n    case 'o':\n      return null;\n    default:\n  }\n}\n\nfunction getNextReg(regList, pressedKey, currentRegIndex) {\n  switch (pressedKey) {\n    case 'j':\n      return regList[(currentRegIndex + 1) % regList.length]\n    case 'k':\n      return regList[(currentRegIndex - 1 + regList.length) % regList.length]\n    default:\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}