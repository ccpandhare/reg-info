{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Image","location","className","style","backgroundImage","DownloadJSON","data","downloadFile","_","download","JSON","stringify","useEffect","detectD","e","key","document","addEventListener","removeEventListener","id","onClick","LoadJSON","setData","setReg","fileInput","useRef","useState","file","setFile","error","setError","detectU","current","click","validateFile","name","match","type","ref","onChange","_file","files","text","then","json","parse","Object","keys","catch","err","String","getInfo","infoArray","info","value","map","i","indexOf","BitInfo","bit","selBit","property","setSelBit","multiSelected","isSelected","index","App","_data","regList","reg","isSummaryMode","setSummaryMode","setMultiSelected","regData","setInfo","length","bits","filter","b","handleKeyDown","useCallback","pressedKey","currentIndex","nextIndex","getNextBit","currentRegIndex","getNextReg","currentData","obj","copy","currentValue","getNextValue","m","onkeydown","k","Array","isArray","split","l","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"wxKAqJA,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,SACd,OAAO,yBAAKC,UAAU,QAAQC,MAAO,CAACC,gBAAgB,OAAD,OAASH,EAAT,SAGvD,SAASI,EAAT,GAA+B,IAARC,EAAO,EAAPA,KACfC,EAAe,SAAAC,GACnBC,IAASC,KAAKC,UAAUL,EAAM,KAAM,GAAI,cAa1C,OAXAM,qBAAU,WACR,IAAMC,EAAU,SAAAC,GACD,MAAVA,EAAEC,KACHR,KAIJ,OADAS,SAASC,iBAAiB,QAASJ,GAC5B,SAAAL,GACLQ,SAASE,oBAAoB,QAASL,OAIxC,yBAAKM,GAAG,gBACN,4BAAQC,QAASb,GAAjB,oBAKN,SAASc,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,OACpBC,EAAYC,mBADiB,EAEXC,mBAAS,MAFE,mBAE5BC,EAF4B,KAEtBC,EAFsB,OAGTF,mBAAS,MAHA,mBAG5BG,EAH4B,KAGrBC,EAHqB,KAoBnClB,qBAAU,WACR,IAAMmB,EAAU,SAAAjB,GACD,MAAVA,EAAEC,KACHS,EAAUQ,QAAQC,SAItB,OADAjB,SAASC,iBAAiB,QAASc,GAC5B,SAAAvB,GACLQ,SAASE,oBAAoB,QAASa,OAG1C,IAAMG,EAAe,SAAAP,GACnB,QAASA,EAAKQ,KAAKC,MAAM,YAE3B,OACE,yBAAKjB,GAAG,YACN,4BAAQC,QAAS,SAAAZ,GAAC,OAAIgB,EAAUQ,QAAQC,UAAxC,eACA,2BAAOI,KAAK,OAAOC,IAAKd,EAAWe,SAjCT,SAAA/B,GAC5BoB,EAAQ,MACRE,EAAS,MACT,IAAMU,EAAQhB,EAAUQ,QAAQS,MAAM,GACtBP,EAAaM,IAE3BZ,EAAQY,GACRA,EAAME,OAAOC,MAAK,SAAArC,GAChB,IAAMsC,EAAOlC,KAAKmC,MAAMvC,GACxBgB,EAAQsB,GACRrB,EAAOuB,OAAOC,KAAKH,GAAM,OACxBI,OAAM,SAAAC,GAAG,OAAInB,EAASoB,OAAOD,QAEhCnB,EAAS,mBAqBRD,EAAQ,2BAAO3B,UAAU,SAAS2B,GAAiBF,GAAQ,+BAAQA,EAAKQ,QAK/E,SAASgB,EAAT,GAA4C,IAApBC,EAAmB,EAAzBC,KAAiBC,EAAQ,EAARA,MACjC,MAAc,MAAVA,GAA2B,MAAVA,EACZF,EAAUE,GAEZF,EAAUG,KAAI,SAAAC,GAAC,gBAAOJ,EAAUK,QAAQD,GAAzB,aAAgCA,MAGxD,SAASE,EAAT,GAAqE,IAAnDC,EAAkD,EAAlDA,IAAKC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,cAC5CC,IAAaJ,GAASA,EAAOK,QAAUN,EAAIM,MACjD,OACE,2BACE/D,UAAS,kBAAa2D,EAAb,YAAyBG,GAAc,WAAvC,YAAqDD,GAAiB,iBAC/E3C,QAAS,SAAAZ,GAAC,OAAIsD,EAAUH,KACvBA,EAAIE,IAuDIK,MAzRf,WAAgB,IAAD,EACWxC,mBAASyC,GADpB,mBACN7D,EADM,KACAgB,EADA,KAEP8C,EAAUtB,OAAOC,KAAKzC,GAFf,EAGSoB,mBAAS0C,EAAQ,IAH1B,mBAGNC,EAHM,KAGD9C,EAHC,OAIeG,mBAAS,MAJxB,mBAINkC,EAJM,KAIEE,EAJF,OAK2BpC,oBAAS,GALpC,mBAKN4C,EALM,KAKSC,EALT,OAM6B7C,mBAAS,IANtC,mBAMNqC,EANM,KAMSS,EANT,KAOPC,EAAUnE,EAAK+D,GAPR,EAQW3C,mBAAS+C,EAAUA,EAAQpB,KAAO,MAR7C,mBAQNA,EARM,KAQAqB,EARA,KAUb9D,qBAAU,WACJ6D,GAAoC,IAAzBV,EAAcY,OAC3BD,EAAQD,EAAQG,KAAKC,QAAO,SAAAC,GAAC,OAAwC,IAApCf,EAAcN,QAAQqB,EAAEb,UAAeV,KAAI,SAAAuB,GAAC,oBAAWA,EAAEb,MAAb,aAAuBd,EAAQ2B,QAEvGlB,EAEMA,GACTc,EAAQvB,EAAQS,IAFhBc,EAAQD,EAAUA,EAAQpB,KAAO,MAKpC,CAACO,EAAQG,IAEZnD,qBAAU,WACLgD,GAAUa,GACXX,EAAUW,EAAQG,KAAKhB,EAAOK,UAE/B,CAAC3D,IAEJM,qBAAU,WACRkD,EAAU,MACVU,EAAiB,MAChB,CAACH,IAEJ,IAsNgB3B,EAtNVqC,EAAgBC,uBAAY,SAAClE,GAC/B,OAAQA,EAAEC,KACR,IAAK,IACL,IAAK,IACL,IAAK,IACH,IAAI0D,GAA4B,UAAjBA,EAAQpC,KACrB,MACFkC,GAAe,GACfT,EAoNV,SAAoBc,EAAMK,EAAYC,GACpC,IAAIC,EACJ,IAAKP,EAAM,OACX,OAAQK,GACN,IAAK,IAGH,OAFoB,MAAhBC,IAAsBA,GAAgB,GAC1CC,EAAYD,EAAe,EAAIN,EAAKD,OAASO,EAAe,EAAI,EACzDN,EAAKO,GACd,IAAK,IAGH,OAFoB,MAAhBD,IAAsBA,EAAe,GACzCC,EAA6B,IAAjBD,EAAqBN,EAAKD,OAAS,EAAIO,EAAe,EAC3DN,EAAKO,GACd,IAAK,IACH,OAAO,MAjOOC,CAAWX,EAAQG,KAAM9D,EAAEC,IAAK6C,GAAUA,EAAOK,QAC3D,MACF,IAAK,IACL,IAAK,IACHM,GAAe,GACfhD,EAiOV,SAAoB6C,EAASa,EAAYI,GACvC,OAAQJ,GACN,IAAK,IACH,OAAOb,GAASiB,EAAkB,GAAKjB,EAAQO,QACjD,IAAK,IACH,OAAOP,GAASiB,EAAkB,EAAIjB,EAAQO,QAAUP,EAAQO,SAtOrDW,CAAWlB,EAAStD,EAAEC,IAAKqD,EAAQX,QAAQY,KAClD,MACF,IAAK,IAEH,GADAE,GAAe,IACVX,EAAQ,OACbtC,GAAQ,SAACiE,GACP,IA+LYC,EA/LNC,GA+LMD,EA/LgBD,EAgM/B7E,KAAKmC,MAAMnC,KAAKC,UAAU6E,KA9LvB,OADAC,EAAKpB,GAAKO,KAAKhB,EAAOK,OAAOX,MAkLzC,SAAsBoC,GACpB,OAAQA,GACN,IAAK,IACH,MAAO,IACT,IAAK,IACH,MAAO,IACT,IAAK,IACL,QACE,MAAO,KA1LoCC,CAAa/B,EAAON,OAClDmC,KAET,MACF,IAAK,IACH,IAAIhB,GAA4B,UAAjBA,EAAQpC,KACrB,MACEiC,GACFC,GAAe,GACfG,EAAQd,EAAST,EAAQS,GAAWa,EAAUA,EAAQpB,KAAO,MAE7DkB,GAAe,GACZE,GAASC,EAAQD,EAAQG,KAAKrB,KAAI,SAAAuB,GAAC,gBAAOA,EAAEb,MAAT,aAAmBd,EAAQ2B,SAEnE,MACF,IAAK,IACClB,KAC2C,IAAzCG,EAAcN,QAAQG,EAAOK,OAC/BO,GAAiB,SAAAoB,GAAC,OAAIA,EAAEf,QAAO,SAAAe,GAAC,OAAIA,IAAMhC,EAAOK,YAEjDO,GAAiB,SAAAoB,GAAC,4BAAQA,GAAR,CAAWhC,EAAOK,YAGxC,MACF,IAAK,IACHO,EAAiB,OAKvB,CAACjD,EAAQuC,EAAWxC,EAASmD,EAASL,EAASR,EAAQS,IAKzD,OAFArD,SAAS6E,UAAYd,EAEdN,EACL,yBAAKvE,UAAU,OACb,yBAAKiB,GAAG,UAAR,YAEE,yBAAKA,GAAG,WACN,kBAACd,EAAD,CAAcC,KAAMA,IACpB,kBAACe,EAAD,CAAUC,QAASA,EAASC,OAAQA,MAGxC,yBAAKJ,GAAG,WACN,yBAAKA,GAAG,eACLiD,EAAQb,KAAI,SAACuC,GAAD,OACX,uBACE5F,UAAS,kBAAa4F,IAAMzB,GAAO,YACnCjD,QAAS,SAACZ,GAAD,OAAOe,EAAOuE,KAEtBA,OAIP,yBAAK3E,GAAG,aAAajB,UAAWoE,GAAiB,WAE9B,UAAjBG,EAAQpC,KACN,kBAACrC,EAAD,CAAOC,SAAUwE,EAAQxE,WAE3B,oCACA,uBAAGkB,GAAG,UAAUC,QAAS,SAAAZ,GAAC,OAAIsD,EAAU,QAAQW,EAAQtC,MAAQ,WAChE,yBAAKhB,GAAG,OAAOhB,MAAO,CAAC,SAAUsE,EAAQG,KAAKD,SACzCF,EAAQG,KAAKrB,KAAI,SAACuB,GAAD,OAChB,kBAACpB,EAAD,CAASC,IAAKmB,EAAGjB,SAAS,QAAQC,UAAWA,OAE9CW,EAAQG,KAAKrB,KAAI,SAACuB,GAAD,OAChB,kBAACpB,EAAD,CAASE,OAAQA,EAAQD,IAAKmB,EAAGjB,SAAS,QAAQC,UAAWA,EAAWC,eAAmD,IAApCA,EAAcN,QAAQqB,EAAEb,YAEhHQ,EAAQG,KAAKrB,KAAI,SAACuB,GAAD,OAChB,kBAACpB,EAAD,CAASC,IAAKmB,EAAGjB,SAAS,OAAOC,UAAWA,OAE7CW,EAAQG,KAAKrB,KAAI,SAACuB,GAAD,OAChB,kBAACpB,EAAD,CAASC,IAAKmB,EAAGjB,SAAS,cAAcC,UAAWA,QAGzD,yBAAK3C,GAAG,QACN,8BAqHMuB,EAnHOW,EAoHnB0C,MAAMC,QAAQtD,GAAcA,EACZ,kBAATA,EAA0B,CAAC,IAC/BA,EAAKuD,MAAM,OAtHW1C,KAAI,SAAA2C,GAAC,OAAI,2BAAIA,YAStC,4CCtIcC,QACW,cAA7BC,OAAOnG,SAASoG,UAEe,UAA7BD,OAAOnG,SAASoG,UAEhBD,OAAOnG,SAASoG,SAASjE,MACvB,2DCZNkE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxF,SAASyF,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEd9D,OAAM,SAAAnB,GACLkF,QAAQlF,MAAMA,EAAMmF,c","file":"static/js/main.d54926e2.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport download from 'js-file-download';\nimport _data from \"./data\";\n\nfunction App() {\n  const [data, setData] = useState(_data);\n  const regList = Object.keys(data);\n  const [reg, setReg] = useState(regList[0]);\n  const [selBit, setSelBit] = useState(null);\n  const [isSummaryMode, setSummaryMode] = useState(false);\n  const [multiSelected, setMultiSelected] = useState([]);\n  const regData = data[reg];\n  const [info, setInfo] = useState(regData ? regData.info : null);\n\n  useEffect(() => {\n    if (regData && multiSelected.length !== 0) {\n      setInfo(regData.bits.filter(b => multiSelected.indexOf(b.index) !== -1).map(b => `bit ${b.index}: ${getInfo(b)}`))\n    } else {\n      if (!selBit) {\n        setInfo(regData ? regData.info : '')\n      } else if (selBit) {\n        setInfo(getInfo(selBit));\n      }\n    }\n  }, [selBit, multiSelected]);\n\n  useEffect(() => {\n    if(selBit && regData)\n      setSelBit(regData.bits[selBit.index]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  useEffect(() => {\n    setSelBit(null);\n    setMultiSelected([]);\n  }, [reg])\n\n  const handleKeyDown = useCallback((e) => {\n      switch (e.key) {\n        case \"l\":\n        case \"h\":\n        case \"o\":\n          if(!regData || regData.type === \"image\")\n            break;\n          setSummaryMode(false);\n          setSelBit(getNextBit(regData.bits, e.key, selBit && selBit.index));\n          break;\n        case \"j\":\n        case \"k\":\n          setSummaryMode(false);\n          setReg(getNextReg(regList, e.key, regList.indexOf(reg)))\n          break;\n        case \" \":\n          setSummaryMode(false);\n          if (!selBit) return;\n          setData((currentData) => {\n            const copy = deepCopyObject(currentData);\n            copy[reg].bits[selBit.index].value = getNextValue(selBit.value);\n            return copy;\n          });\n          break;\n        case \"s\":\n          if(!regData || regData.type === \"image\")\n            break;\n          if (isSummaryMode) {\n            setSummaryMode(false);\n            setInfo(selBit ? getInfo(selBit) : (regData ? regData.info : ''))\n          } else {\n            setSummaryMode(true);\n            if(regData) setInfo(regData.bits.map(b => `${b.index}: ${getInfo(b)}`))\n          }\n          break;\n        case \"m\":\n          if (selBit) {\n            if (multiSelected.indexOf(selBit.index) !== -1) {\n              setMultiSelected(m => m.filter(m => m !== selBit.index))\n            } else {\n              setMultiSelected(m => [...m, selBit.index]);\n            }\n          }\n          break;\n        case \"M\":\n          setMultiSelected([]);\n          break;\n        default:\n      }\n    },\n    [setReg, setSelBit, setData, regData, regList, selBit, reg]\n  );\n\n  document.onkeydown = handleKeyDown;\n\n  return regData ? (\n    <div className=\"App\">\n      <div id=\"Header\">\n        $ RegInfo\n        <div id=\"Buttons\">\n          <DownloadJSON data={data} />\n          <LoadJSON setData={setData} setReg={setReg} />\n        </div>\n      </div>\n      <div id=\"Content\">\n        <div id=\"LeftSection\">\n          {regList.map((k) => (\n            <p\n              className={`regLink ${k === reg && \"selected\"}`}\n              onClick={(_) => setReg(k)}\n            >\n              {k}\n            </p>\n          ))}\n        </div>\n        <div id=\"RegSection\" className={isSummaryMode && 'summary'}>\n        {\n          regData.type === \"image\"\n          ? <Image location={regData.location} />\n          : (\n          <>\n          <p id=\"RegName\" onClick={_ => setSelBit(null)}>{regData.name || \"No Name\"}</p>\n          <div id=\"Bits\" style={{'--cols': regData.bits.length}}>\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"index\" setSelBit={setSelBit} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo selBit={selBit} bit={b} property=\"value\" setSelBit={setSelBit} multiSelected={multiSelected.indexOf(b.index) !== -1} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"name\" setSelBit={setSelBit} />\n              ))}\n              {regData.bits.map((b) => (\n                <BitInfo bit={b} property=\"permissions\" setSelBit={setSelBit} />\n              ))}\n          </div>\n          <div id=\"Info\">\n            <div>\n              {\n                getLines(info).map(l => <p>{l}</p>)\n              }\n            </div>\n          </div>\n          </>\n          )}\n        </div>\n      </div>\n    </div>\n  ) : <div>Loading...</div>;\n}\n\nfunction Image({location}) {\n  return <div className=\"image\" style={{backgroundImage: `url(${location})`}} />\n}\n\nfunction DownloadJSON({data}) {\n  const downloadFile = _ => {\n    download(JSON.stringify(data, null, 2), 'data.json');\n  }\n  useEffect(() => {\n    const detectD = e => {\n      if(e.key === 'd') {\n        downloadFile();\n      }\n    }\n    document.addEventListener(\"keyup\", detectD);\n    return _ => {\n      document.removeEventListener(\"keyup\", detectD);\n    }\n  })\n  return (\n    <div id=\"DownloadJSON\">\n      <button onClick={downloadFile}>$ Download JSON</button>\n    </div>\n  )\n}\n\nfunction LoadJSON({setData, setReg}) {\n  const fileInput = useRef();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileInputChange = _ => {\n    setFile(null);\n    setError(null);\n    const _file = fileInput.current.files[0];\n    const isValid = validateFile(_file);\n    if(isValid) {\n      setFile(_file);\n      _file.text().then(data => {\n        const json = JSON.parse(data);\n        setData(json);\n        setReg(Object.keys(json)[0])\n      }).catch(err => setError(String(err)));\n    } else {\n      setError(\"Invalid File\");\n    }\n  }\n  useEffect(() => {\n    const detectU = e => {\n      if(e.key === 'u') {\n        fileInput.current.click();\n      }\n    }\n    document.addEventListener(\"keyup\", detectU);\n    return _ => {\n      document.removeEventListener(\"keyup\", detectU);\n    }\n  })\n  const validateFile = file => {\n    return !!file.name.match(/.json$/i);\n  }\n  return (\n    <div id=\"LoadJSON\">\n      <button onClick={_ => fileInput.current.click()}>$ Load JSON</button>\n      <input type=\"file\" ref={fileInput} onChange={handleFileInputChange} />\n      {error ? <label className=\"error\">{error}</label> : file && <label>{file.name}</label>}\n    </div>\n  );\n}\n\nfunction getInfo({info: infoArray, value}) {\n  if (value === '1' || value === '0') {\n    return infoArray[value];\n  }\n  return infoArray.map(i => `${infoArray.indexOf(i)}: ${i}`);\n}\n\nfunction BitInfo({bit, selBit, property, setSelBit, multiSelected}) {\n  const isSelected = selBit ? selBit.index === bit.index : false;\n  return (\n    <label\n      className={`bitInfo ${property} ${isSelected && 'selected'} ${multiSelected && 'multiSelected'}`}\n      onClick={_ => setSelBit(bit)}>\n      {bit[property]}\n    </label>\n  )\n}\n\nfunction getNextValue(currentValue) {\n  switch (currentValue) {\n    case 'x':\n      return '0';\n    case '0':\n      return '1';\n    case '1':\n    default:\n      return 'x';\n  }\n}\n\nfunction deepCopyObject(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction getLines(text) {\n  if (Array.isArray(text)) return text;\n  if (typeof text !== 'string') return [''];\n  return text.split(\"\\n\");\n}\n\nfunction getNextBit(bits, pressedKey, currentIndex) {\n  let nextIndex;\n  if (!bits) return;\n  switch (pressedKey) {\n    case 'l':\n      if (currentIndex == null) currentIndex = -1;\n      nextIndex = currentIndex + 1 < bits.length ? currentIndex + 1 : 0;\n      return bits[nextIndex];\n    case 'h':\n      if (currentIndex == null) currentIndex = 0;\n      nextIndex = currentIndex === 0 ? bits.length - 1 : currentIndex - 1;\n      return bits[nextIndex];\n    case 'o':\n      return null;\n    default:\n  }\n}\n\nfunction getNextReg(regList, pressedKey, currentRegIndex) {\n  switch (pressedKey) {\n    case 'j':\n      return regList[(currentRegIndex + 1) % regList.length]\n    case 'k':\n      return regList[(currentRegIndex - 1 + regList.length) % regList.length]\n    default:\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}